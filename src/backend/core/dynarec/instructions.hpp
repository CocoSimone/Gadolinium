#pragma once
#include <Dynarec.hpp>

namespace n64 {
void add(Dynarec&, u32);
void addu(Dynarec&, u32);
void addi(Dynarec&, u32);
void addiu(Dynarec&, u32);
void andi(Dynarec&, u32);
void and_(Dynarec&, u32);
void branch(Dynarec&, bool, s64);
void branch_likely(Dynarec&, bool, s64);
void b(Dynarec&, u32, bool);
void blink(Dynarec&, u32, bool);
void bl(Dynarec&, u32, bool);
void bllink(Dynarec&, u32, bool);
void dadd(Dynarec&, u32);
void daddu(Dynarec&, u32);
void daddi(Dynarec&, u32);
void daddiu(Dynarec&, u32);
void ddiv(Dynarec&, u32);
void ddivu(Dynarec&, u32);
void div(Dynarec&, u32);
void divu(Dynarec&, u32);
void dmult(Dynarec&, u32);
void dmultu(Dynarec&, u32);
void dsll(Dynarec&, u32);
void dsllv(Dynarec&, u32);
void dsll32(Dynarec&, u32);
void dsra(Dynarec&, u32);
void dsrav(Dynarec&, u32);
void dsra32(Dynarec&, u32);
void dsrl(Dynarec&, u32);
void dsrlv(Dynarec&, u32);
void dsrl32(Dynarec&, u32);
void dsub(Dynarec&, u32);
void dsubu(Dynarec&, u32);
void j(Dynarec&, u32);
void jr(Dynarec&, u32);
void jal(Dynarec&, u32);
void jalr(Dynarec&, u32);
void lui(Dynarec&, u32);
void lbu(Dynarec&, u32);
void lb(Dynarec&, u32);
void ld(Dynarec&, u32);
void ldl(Dynarec&, u32);
void ldr(Dynarec&, u32);
void lh(Dynarec&, u32);
void lhu(Dynarec&, u32);
void ll(Dynarec&, u32);
void lld(Dynarec&, u32);
void lw(Dynarec&, u32);
void lwl(Dynarec&, u32);
void lwu(Dynarec&, u32);
void lwr(Dynarec&, u32);
void mfhi(Dynarec&, u32);
void mflo(Dynarec&, u32);
void mult(Dynarec&, u32);
void multu(Dynarec&, u32);
void mthi(Dynarec&, u32);
void mtlo(Dynarec&, u32);
void nor(Dynarec&, u32);
void sb(Dynarec&, u32);
void sc(Dynarec&, u32);
void scd(Dynarec&, u32);
void sd(Dynarec&, u32);
void sdl(Dynarec&, u32);
void sdr(Dynarec&, u32);
void sh(Dynarec&, u32);
void sw(Dynarec&, u32);
void swl(Dynarec&, u32);
void swr(Dynarec&, u32);
void slti(Dynarec&, u32);
void sltiu(Dynarec&, u32);
void slt(Dynarec&, u32);
void sltu(Dynarec&, u32);
void sll(Dynarec&, u32);
void sllv(Dynarec&, u32);
void sub(Dynarec&, u32);
void subu(Dynarec&, u32);
void sra(Dynarec&, u32);
void srav(Dynarec&, u32);
void srl(Dynarec&, u32);
void srlv(Dynarec&, u32);
void trap(Dynarec&, bool);
void or_(Dynarec&, u32);
void ori(Dynarec&, u32);
void xor_(Dynarec&, u32);
void xori(Dynarec&, u32);
void mtc2(Dynarec&, u32);
void mfc2(Dynarec&, u32);
void dmtc2(Dynarec&, u32);
void dmfc2(Dynarec&, u32);
}